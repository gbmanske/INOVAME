

================================================================
== Vitis HLS Report for 'kernel'
================================================================
* Date:           Mon Jan  6 16:33:51 2025

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        fibonacci
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: artix7
* Target device:  xc7a200t-fbg484-3


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  4.353 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_24_1  |        ?|        ?|         1|          1|          1|     ?|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 1
  Pipeline-0 : II = 1, D = 1, States = { 1 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 4.35>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%x2 = alloca i32 1" [fibonacci/fibonacci.cpp:22]   --->   Operation 4 'alloca' 'x2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%i = alloca i32 1" [fibonacci/fibonacci.cpp:24]   --->   Operation 5 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%x2_1 = alloca i32 1" [fibonacci/fibonacci.cpp:22]   --->   Operation 6 'alloca' 'x2_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 0"   --->   Operation 7 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%spectopmodule_ln19 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_1" [fibonacci/fibonacci.cpp:19]   --->   Operation 8 'spectopmodule' 'spectopmodule_ln19' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %n"   --->   Operation 9 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %n, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 10 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%n_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %n" [fibonacci/fibonacci.cpp:19]   --->   Operation 11 'read' 'n_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (1.17ns)   --->   "%store_ln22 = store i32 1, i32 %x2_1" [fibonacci/fibonacci.cpp:22]   --->   Operation 12 'store' 'store_ln22' <Predicate = true> <Delay = 1.17>
ST_1 : Operation 13 [1/1] (1.17ns)   --->   "%store_ln24 = store i32 1, i32 %i" [fibonacci/fibonacci.cpp:24]   --->   Operation 13 'store' 'store_ln24' <Predicate = true> <Delay = 1.17>
ST_1 : Operation 14 [1/1] (1.17ns)   --->   "%store_ln22 = store i32 0, i32 %x2" [fibonacci/fibonacci.cpp:22]   --->   Operation 14 'store' 'store_ln22' <Predicate = true> <Delay = 1.17>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%br_ln24 = br void %for.inc" [fibonacci/fibonacci.cpp:24]   --->   Operation 15 'br' 'br_ln24' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%i_2 = load i32 %i" [fibonacci/fibonacci.cpp:24]   --->   Operation 16 'load' 'i_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%x1_2 = load i32 %x2_1" [fibonacci/fibonacci.cpp:26]   --->   Operation 17 'load' 'x1_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (2.00ns)   --->   "%icmp_ln24 = icmp_ult  i32 %i_2, i32 %n_read" [fibonacci/fibonacci.cpp:24]   --->   Operation 18 'icmp' 'icmp_ln24' <Predicate = true> <Delay = 2.00> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.00> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%br_ln24 = br i1 %icmp_ln24, void %for.end.loopexit, void %for.inc.split" [fibonacci/fibonacci.cpp:24]   --->   Operation 19 'br' 'br_ln24' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%x2_load = load i32 %x2" [fibonacci/fibonacci.cpp:26]   --->   Operation 20 'load' 'x2_load' <Predicate = (icmp_ln24)> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%specpipeline_ln22 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_0" [fibonacci/fibonacci.cpp:22]   --->   Operation 21 'specpipeline' 'specpipeline_ln22' <Predicate = (icmp_ln24)> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%specloopname_ln24 = specloopname void @_ssdm_op_SpecLoopName, void @empty_2" [fibonacci/fibonacci.cpp:24]   --->   Operation 22 'specloopname' 'specloopname_ln24' <Predicate = (icmp_ln24)> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (2.00ns)   --->   "%x1 = add i32 %x2_load, i32 %x1_2" [fibonacci/fibonacci.cpp:26]   --->   Operation 23 'add' 'x1' <Predicate = (icmp_ln24)> <Delay = 2.00> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.00> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (2.00ns)   --->   "%i_3 = add i32 %i_2, i32 1" [fibonacci/fibonacci.cpp:24]   --->   Operation 24 'add' 'i_3' <Predicate = (icmp_ln24)> <Delay = 2.00> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.00> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (1.17ns)   --->   "%store_ln22 = store i32 %x1, i32 %x2_1" [fibonacci/fibonacci.cpp:22]   --->   Operation 25 'store' 'store_ln22' <Predicate = (icmp_ln24)> <Delay = 1.17>
ST_1 : Operation 26 [1/1] (1.17ns)   --->   "%store_ln24 = store i32 %i_3, i32 %i" [fibonacci/fibonacci.cpp:24]   --->   Operation 26 'store' 'store_ln24' <Predicate = (icmp_ln24)> <Delay = 1.17>
ST_1 : Operation 27 [1/1] (1.17ns)   --->   "%store_ln22 = store i32 %x1_2, i32 %x2" [fibonacci/fibonacci.cpp:22]   --->   Operation 27 'store' 'store_ln22' <Predicate = (icmp_ln24)> <Delay = 1.17>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%br_ln24 = br void %for.inc" [fibonacci/fibonacci.cpp:24]   --->   Operation 28 'br' 'br_ln24' <Predicate = (icmp_ln24)> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%ret_ln29 = ret i32 %x1_2" [fibonacci/fibonacci.cpp:29]   --->   Operation 29 'ret' 'ret_ln29' <Predicate = (!icmp_ln24)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 4.353ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln22', fibonacci/fibonacci.cpp:22) of constant 1 on local variable 'x2', fibonacci/fibonacci.cpp:22 [10]  (1.173 ns)
	'load' operation 32 bit ('x1', fibonacci/fibonacci.cpp:26) on local variable 'x2', fibonacci/fibonacci.cpp:22 [16]  (0.000 ns)
	'add' operation 32 bit ('x1', fibonacci/fibonacci.cpp:26) [23]  (2.007 ns)
	'store' operation 0 bit ('store_ln22', fibonacci/fibonacci.cpp:22) of variable 'x1', fibonacci/fibonacci.cpp:26 on local variable 'x2', fibonacci/fibonacci.cpp:22 [25]  (1.173 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
