-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity kernel is
generic (
    C_M_AXI_GMEM0_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM0_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM0_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM1_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM1_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM0_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM0_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM0_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM1_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM1_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM1_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_gmem0_AWVALID : OUT STD_LOGIC;
    m_axi_gmem0_AWREADY : IN STD_LOGIC;
    m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ADDR_WIDTH-1 downto 0);
    m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem0_WVALID : OUT STD_LOGIC;
    m_axi_gmem0_WREADY : IN STD_LOGIC;
    m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH-1 downto 0);
    m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem0_WLAST : OUT STD_LOGIC;
    m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_WUSER_WIDTH-1 downto 0);
    m_axi_gmem0_ARVALID : OUT STD_LOGIC;
    m_axi_gmem0_ARREADY : IN STD_LOGIC;
    m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ADDR_WIDTH-1 downto 0);
    m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem0_RVALID : IN STD_LOGIC;
    m_axi_gmem0_RREADY : OUT STD_LOGIC;
    m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH-1 downto 0);
    m_axi_gmem0_RLAST : IN STD_LOGIC;
    m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_RUSER_WIDTH-1 downto 0);
    m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BVALID : IN STD_LOGIC;
    m_axi_gmem0_BREADY : OUT STD_LOGIC;
    m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_BUSER_WIDTH-1 downto 0);
    m_axi_gmem1_AWVALID : OUT STD_LOGIC;
    m_axi_gmem1_AWREADY : IN STD_LOGIC;
    m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ADDR_WIDTH-1 downto 0);
    m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem1_WVALID : OUT STD_LOGIC;
    m_axi_gmem1_WREADY : IN STD_LOGIC;
    m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH-1 downto 0);
    m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem1_WLAST : OUT STD_LOGIC;
    m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_WUSER_WIDTH-1 downto 0);
    m_axi_gmem1_ARVALID : OUT STD_LOGIC;
    m_axi_gmem1_ARREADY : IN STD_LOGIC;
    m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ADDR_WIDTH-1 downto 0);
    m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem1_RVALID : IN STD_LOGIC;
    m_axi_gmem1_RREADY : OUT STD_LOGIC;
    m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH-1 downto 0);
    m_axi_gmem1_RLAST : IN STD_LOGIC;
    m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_RUSER_WIDTH-1 downto 0);
    m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BVALID : IN STD_LOGIC;
    m_axi_gmem1_BREADY : OUT STD_LOGIC;
    m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_BUSER_WIDTH-1 downto 0);
    vCol : IN STD_LOGIC_VECTOR (31 downto 0);
    vRow : IN STD_LOGIC_VECTOR (31 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of kernel is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "kernel_kernel,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a200t-fbg484-3,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=8,HLS_SYN_DSP=0,HLS_SYN_FF=2960,HLS_SYN_LUT=2900,HLS_VERSION=2023_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant C_S_AXI_DATA_WIDTH : INTEGER := 32;
    constant C_M_AXI_DATA_WIDTH : INTEGER := 32;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal in1 : STD_LOGIC_VECTOR (63 downto 0);
    signal in2 : STD_LOGIC_VECTOR (63 downto 0);
    signal out_r : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln19_fu_114_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln19_reg_152 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln19_fu_110_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln19_reg_157 : STD_LOGIC_VECTOR (63 downto 0);
    signal out_r_read_reg_162 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal in2_read_reg_167 : STD_LOGIC_VECTOR (63 downto 0);
    signal in1_read_reg_172 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_fu_133_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal empty_reg_177 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_ap_start : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_ap_done : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_ap_idle : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_ap_ready : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_AWVALID : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_WVALID : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_WLAST : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_ARVALID : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_RREADY : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_BREADY : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_AWVALID : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_WVALID : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_WLAST : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_ARVALID : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_RREADY : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_BREADY : STD_LOGIC;
    signal gmem0_AWVALID : STD_LOGIC;
    signal gmem0_AWREADY : STD_LOGIC;
    signal gmem0_WVALID : STD_LOGIC;
    signal gmem0_WREADY : STD_LOGIC;
    signal gmem0_ARVALID : STD_LOGIC;
    signal gmem0_ARREADY : STD_LOGIC;
    signal gmem0_RVALID : STD_LOGIC;
    signal gmem0_RREADY : STD_LOGIC;
    signal gmem0_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem0_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem0_BVALID : STD_LOGIC;
    signal gmem0_BREADY : STD_LOGIC;
    signal gmem1_AWREADY : STD_LOGIC;
    signal gmem1_WREADY : STD_LOGIC;
    signal gmem1_ARVALID : STD_LOGIC;
    signal gmem1_ARREADY : STD_LOGIC;
    signal gmem1_RVALID : STD_LOGIC;
    signal gmem1_RREADY : STD_LOGIC;
    signal gmem1_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem1_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem1_BVALID : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal mul_ln19_fu_110_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln19_fu_110_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal cmp21_fu_128_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal mul_ln19_fu_110_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln19_fu_110_p10 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component kernel_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem0_AWREADY : IN STD_LOGIC;
        m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WVALID : OUT STD_LOGIC;
        m_axi_gmem0_WREADY : IN STD_LOGIC;
        m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_WLAST : OUT STD_LOGIC;
        m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem0_ARREADY : IN STD_LOGIC;
        m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RVALID : IN STD_LOGIC;
        m_axi_gmem0_RREADY : OUT STD_LOGIC;
        m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_RLAST : IN STD_LOGIC;
        m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BVALID : IN STD_LOGIC;
        m_axi_gmem0_BREADY : OUT STD_LOGIC;
        m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_AWVALID : OUT STD_LOGIC;
        m_axi_gmem1_AWREADY : IN STD_LOGIC;
        m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WVALID : OUT STD_LOGIC;
        m_axi_gmem1_WREADY : IN STD_LOGIC;
        m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_WLAST : OUT STD_LOGIC;
        m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARVALID : OUT STD_LOGIC;
        m_axi_gmem1_ARREADY : IN STD_LOGIC;
        m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RVALID : IN STD_LOGIC;
        m_axi_gmem1_RREADY : OUT STD_LOGIC;
        m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_RLAST : IN STD_LOGIC;
        m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BVALID : IN STD_LOGIC;
        m_axi_gmem1_BREADY : OUT STD_LOGIC;
        m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        mul_ln19 : IN STD_LOGIC_VECTOR (63 downto 0);
        vRow : IN STD_LOGIC_VECTOR (31 downto 0);
        p_cast : IN STD_LOGIC_VECTOR (30 downto 0);
        vCol_cast : IN STD_LOGIC_VECTOR (31 downto 0);
        out_r : IN STD_LOGIC_VECTOR (63 downto 0);
        in2 : IN STD_LOGIC_VECTOR (63 downto 0);
        in1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component kernel_mul_32ns_32ns_64_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component kernel_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        in1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        in2 : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_r : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component kernel_gmem0_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;


    component kernel_gmem1_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;



begin
    grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92 : component kernel_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_ap_start,
        ap_done => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_ap_done,
        ap_idle => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_ap_idle,
        ap_ready => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_ap_ready,
        m_axi_gmem0_AWVALID => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY => gmem0_AWREADY,
        m_axi_gmem0_AWADDR => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY => gmem0_WREADY,
        m_axi_gmem0_WDATA => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_WLAST,
        m_axi_gmem0_WID => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_WID,
        m_axi_gmem0_WUSER => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY => gmem0_ARREADY,
        m_axi_gmem0_ARADDR => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID => gmem0_RVALID,
        m_axi_gmem0_RREADY => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA => gmem0_RDATA,
        m_axi_gmem0_RLAST => ap_const_logic_0,
        m_axi_gmem0_RID => ap_const_lv1_0,
        m_axi_gmem0_RFIFONUM => gmem0_RFIFONUM,
        m_axi_gmem0_RUSER => ap_const_lv1_0,
        m_axi_gmem0_RRESP => ap_const_lv2_0,
        m_axi_gmem0_BVALID => gmem0_BVALID,
        m_axi_gmem0_BREADY => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP => ap_const_lv2_0,
        m_axi_gmem0_BID => ap_const_lv1_0,
        m_axi_gmem0_BUSER => ap_const_lv1_0,
        m_axi_gmem1_AWVALID => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY => ap_const_logic_0,
        m_axi_gmem1_AWADDR => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY => ap_const_logic_0,
        m_axi_gmem1_WDATA => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_WLAST,
        m_axi_gmem1_WID => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_WID,
        m_axi_gmem1_WUSER => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY => gmem1_ARREADY,
        m_axi_gmem1_ARADDR => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID => gmem1_RVALID,
        m_axi_gmem1_RREADY => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA => gmem1_RDATA,
        m_axi_gmem1_RLAST => ap_const_logic_0,
        m_axi_gmem1_RID => ap_const_lv1_0,
        m_axi_gmem1_RFIFONUM => gmem1_RFIFONUM,
        m_axi_gmem1_RUSER => ap_const_lv1_0,
        m_axi_gmem1_RRESP => ap_const_lv2_0,
        m_axi_gmem1_BVALID => ap_const_logic_0,
        m_axi_gmem1_BREADY => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP => ap_const_lv2_0,
        m_axi_gmem1_BID => ap_const_lv1_0,
        m_axi_gmem1_BUSER => ap_const_lv1_0,
        mul_ln19 => mul_ln19_reg_157,
        vRow => vRow,
        p_cast => empty_reg_177,
        vCol_cast => vCol,
        out_r => out_r_read_reg_162,
        in2 => in2_read_reg_167,
        in1 => in1_read_reg_172);

    control_s_axi_U : component kernel_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        in1 => in1,
        in2 => in2,
        out_r => out_r);

    gmem0_m_axi_U : component kernel_gmem0_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 7,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM0_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM0_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM0_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM0_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM0_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM0_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM0_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM0_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM0_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM0_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM0_CACHE_VALUE,
        USER_RFIFONUM_WIDTH => 9,
        USER_DW => 32,
        USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_gmem0_AWVALID,
        AWREADY => m_axi_gmem0_AWREADY,
        AWADDR => m_axi_gmem0_AWADDR,
        AWID => m_axi_gmem0_AWID,
        AWLEN => m_axi_gmem0_AWLEN,
        AWSIZE => m_axi_gmem0_AWSIZE,
        AWBURST => m_axi_gmem0_AWBURST,
        AWLOCK => m_axi_gmem0_AWLOCK,
        AWCACHE => m_axi_gmem0_AWCACHE,
        AWPROT => m_axi_gmem0_AWPROT,
        AWQOS => m_axi_gmem0_AWQOS,
        AWREGION => m_axi_gmem0_AWREGION,
        AWUSER => m_axi_gmem0_AWUSER,
        WVALID => m_axi_gmem0_WVALID,
        WREADY => m_axi_gmem0_WREADY,
        WDATA => m_axi_gmem0_WDATA,
        WSTRB => m_axi_gmem0_WSTRB,
        WLAST => m_axi_gmem0_WLAST,
        WID => m_axi_gmem0_WID,
        WUSER => m_axi_gmem0_WUSER,
        ARVALID => m_axi_gmem0_ARVALID,
        ARREADY => m_axi_gmem0_ARREADY,
        ARADDR => m_axi_gmem0_ARADDR,
        ARID => m_axi_gmem0_ARID,
        ARLEN => m_axi_gmem0_ARLEN,
        ARSIZE => m_axi_gmem0_ARSIZE,
        ARBURST => m_axi_gmem0_ARBURST,
        ARLOCK => m_axi_gmem0_ARLOCK,
        ARCACHE => m_axi_gmem0_ARCACHE,
        ARPROT => m_axi_gmem0_ARPROT,
        ARQOS => m_axi_gmem0_ARQOS,
        ARREGION => m_axi_gmem0_ARREGION,
        ARUSER => m_axi_gmem0_ARUSER,
        RVALID => m_axi_gmem0_RVALID,
        RREADY => m_axi_gmem0_RREADY,
        RDATA => m_axi_gmem0_RDATA,
        RLAST => m_axi_gmem0_RLAST,
        RID => m_axi_gmem0_RID,
        RUSER => m_axi_gmem0_RUSER,
        RRESP => m_axi_gmem0_RRESP,
        BVALID => m_axi_gmem0_BVALID,
        BREADY => m_axi_gmem0_BREADY,
        BRESP => m_axi_gmem0_BRESP,
        BID => m_axi_gmem0_BID,
        BUSER => m_axi_gmem0_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem0_ARVALID,
        I_ARREADY => gmem0_ARREADY,
        I_ARADDR => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_ARADDR,
        I_ARLEN => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_ARLEN,
        I_RVALID => gmem0_RVALID,
        I_RREADY => gmem0_RREADY,
        I_RDATA => gmem0_RDATA,
        I_RFIFONUM => gmem0_RFIFONUM,
        I_AWVALID => gmem0_AWVALID,
        I_AWREADY => gmem0_AWREADY,
        I_AWADDR => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_AWADDR,
        I_AWLEN => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_AWLEN,
        I_WVALID => gmem0_WVALID,
        I_WREADY => gmem0_WREADY,
        I_WDATA => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_WDATA,
        I_WSTRB => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_WSTRB,
        I_BVALID => gmem0_BVALID,
        I_BREADY => gmem0_BREADY);

    gmem1_m_axi_U : component kernel_gmem1_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 7,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM1_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM1_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM1_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM1_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM1_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM1_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM1_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM1_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM1_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM1_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM1_CACHE_VALUE,
        USER_RFIFONUM_WIDTH => 9,
        USER_DW => 32,
        USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_gmem1_AWVALID,
        AWREADY => m_axi_gmem1_AWREADY,
        AWADDR => m_axi_gmem1_AWADDR,
        AWID => m_axi_gmem1_AWID,
        AWLEN => m_axi_gmem1_AWLEN,
        AWSIZE => m_axi_gmem1_AWSIZE,
        AWBURST => m_axi_gmem1_AWBURST,
        AWLOCK => m_axi_gmem1_AWLOCK,
        AWCACHE => m_axi_gmem1_AWCACHE,
        AWPROT => m_axi_gmem1_AWPROT,
        AWQOS => m_axi_gmem1_AWQOS,
        AWREGION => m_axi_gmem1_AWREGION,
        AWUSER => m_axi_gmem1_AWUSER,
        WVALID => m_axi_gmem1_WVALID,
        WREADY => m_axi_gmem1_WREADY,
        WDATA => m_axi_gmem1_WDATA,
        WSTRB => m_axi_gmem1_WSTRB,
        WLAST => m_axi_gmem1_WLAST,
        WID => m_axi_gmem1_WID,
        WUSER => m_axi_gmem1_WUSER,
        ARVALID => m_axi_gmem1_ARVALID,
        ARREADY => m_axi_gmem1_ARREADY,
        ARADDR => m_axi_gmem1_ARADDR,
        ARID => m_axi_gmem1_ARID,
        ARLEN => m_axi_gmem1_ARLEN,
        ARSIZE => m_axi_gmem1_ARSIZE,
        ARBURST => m_axi_gmem1_ARBURST,
        ARLOCK => m_axi_gmem1_ARLOCK,
        ARCACHE => m_axi_gmem1_ARCACHE,
        ARPROT => m_axi_gmem1_ARPROT,
        ARQOS => m_axi_gmem1_ARQOS,
        ARREGION => m_axi_gmem1_ARREGION,
        ARUSER => m_axi_gmem1_ARUSER,
        RVALID => m_axi_gmem1_RVALID,
        RREADY => m_axi_gmem1_RREADY,
        RDATA => m_axi_gmem1_RDATA,
        RLAST => m_axi_gmem1_RLAST,
        RID => m_axi_gmem1_RID,
        RUSER => m_axi_gmem1_RUSER,
        RRESP => m_axi_gmem1_RRESP,
        BVALID => m_axi_gmem1_BVALID,
        BREADY => m_axi_gmem1_BREADY,
        BRESP => m_axi_gmem1_BRESP,
        BID => m_axi_gmem1_BID,
        BUSER => m_axi_gmem1_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem1_ARVALID,
        I_ARREADY => gmem1_ARREADY,
        I_ARADDR => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_ARADDR,
        I_ARLEN => grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_ARLEN,
        I_RVALID => gmem1_RVALID,
        I_RREADY => gmem1_RREADY,
        I_RDATA => gmem1_RDATA,
        I_RFIFONUM => gmem1_RFIFONUM,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => gmem1_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWLEN => ap_const_lv32_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => gmem1_WREADY,
        I_WDATA => ap_const_lv32_0,
        I_WSTRB => ap_const_lv4_0,
        I_BVALID => gmem1_BVALID,
        I_BREADY => ap_const_logic_0);

    mul_32ns_32ns_64_1_1_U12 : component kernel_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln19_fu_110_p0,
        din1 => mul_ln19_fu_110_p1,
        dout => mul_ln19_fu_110_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_ap_ready = ap_const_logic_1)) then 
                    grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                empty_reg_177 <= empty_fu_133_p3;
                in1_read_reg_172 <= in1;
                in2_read_reg_167 <= in2;
                out_r_read_reg_162 <= out_r;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                mul_ln19_reg_157 <= mul_ln19_fu_110_p2;
                trunc_ln19_reg_152 <= trunc_ln19_fu_114_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_ap_done, ap_CS_fsm_state3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_ap_done)
    begin
        if ((grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_ap_done, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_ap_done = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_ap_done, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_ap_done = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    cmp21_fu_128_p2 <= "1" when (signed(vRow) > signed(ap_const_lv32_0)) else "0";
    empty_fu_133_p3 <= 
        trunc_ln19_reg_152 when (cmp21_fu_128_p2(0) = '1') else 
        ap_const_lv31_0;

    gmem0_ARVALID_assign_proc : process(ap_CS_fsm_state2, grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_ARVALID, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem0_ARVALID <= grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_ARVALID;
        else 
            gmem0_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_AWVALID_assign_proc : process(ap_CS_fsm_state2, grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_AWVALID, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem0_AWVALID <= grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_AWVALID;
        else 
            gmem0_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_BREADY_assign_proc : process(ap_CS_fsm_state2, grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_BREADY, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem0_BREADY <= grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_BREADY;
        else 
            gmem0_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_RREADY_assign_proc : process(ap_CS_fsm_state2, grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_RREADY, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem0_RREADY <= grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_RREADY;
        else 
            gmem0_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_WVALID_assign_proc : process(ap_CS_fsm_state2, grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_WVALID, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem0_WVALID <= grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem0_WVALID;
        else 
            gmem0_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem1_ARVALID_assign_proc : process(ap_CS_fsm_state2, grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_ARVALID, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem1_ARVALID <= grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_ARVALID;
        else 
            gmem1_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem1_RREADY_assign_proc : process(ap_CS_fsm_state2, grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_RREADY, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem1_RREADY <= grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_m_axi_gmem1_RREADY;
        else 
            gmem1_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_ap_start <= grp_kernel_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_92_ap_start_reg;
    mul_ln19_fu_110_p0 <= mul_ln19_fu_110_p00(32 - 1 downto 0);
    mul_ln19_fu_110_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(vCol),64));
    mul_ln19_fu_110_p1 <= mul_ln19_fu_110_p10(32 - 1 downto 0);
    mul_ln19_fu_110_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(vRow),64));
    trunc_ln19_fu_114_p1 <= vRow(31 - 1 downto 0);
end behav;
