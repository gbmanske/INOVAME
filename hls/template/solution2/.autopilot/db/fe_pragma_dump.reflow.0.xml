<pragmas>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<1025>::ap_int<1025, true>(ap_int_base<1025, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="/tools/amd/Vitis_HLS/2023.2/common/technology/autopilot/etc/ap_common.h" line="515" pragmaType="inline" parentfunction="_ZN8ssdm_intILi1025ELb1EEC2EDq1025_i" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<1025, true>::ap_int_base<1024, true>(ap_int_base<1024, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<1025, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="/tools/amd/Vitis_HLS/2023.2/common/technology/autopilot/etc/ap_common.h" line="515" pragmaType="inline" parentfunction="_ZN8ssdm_intILi1024ELb1EEC2EDq1024_i" off="0" region="0" recursive="0"/>
<pragma file="template/template.cpp" line="22" pragmaType="interface" parentfunction="kernel" mode="m_axi" port="in1" bundle="gmem0" offset="" name="" depth="4096" num_read_outstanding="-1" num_write_outstanding="-1" max_burst_read_length="-1" max_burst_write_length="-1" latency="-1" max_widen_bitwidth="-1" channel=""/>
<pragma file="template/template.cpp" line="23" pragmaType="interface" parentfunction="kernel" mode="m_axi" port="in2" bundle="gmem1" offset="" name="" depth="4096" num_read_outstanding="-1" num_write_outstanding="-1" max_burst_read_length="-1" max_burst_write_length="-1" latency="-1" max_widen_bitwidth="-1" channel=""/>
<pragma file="template/template.cpp" line="24" pragmaType="interface" parentfunction="kernel" mode="m_axi" port="out" bundle="gmem0" offset="" name="" depth="4096" num_read_outstanding="-1" num_write_outstanding="-1" max_burst_read_length="-1" max_burst_write_length="-1" latency="-1" max_widen_bitwidth="-1" channel=""/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<1024, true>::RType<1024, true>::plus operator+<1024, true, 1024, true>(ap_int_base<1024, true> const&, ap_int_base<1024, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<1024>::ap_int<1025>(ap_int<1025> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<1024, true>::ap_int_base<1025, true>(ap_int_base<1025, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowCsim" off="0" region="0" recursive="0"/>
</pragmas>
