// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 32-bit"
// VERSION "Version 13.1.0 Build 162 10/23/2013 SJ Web Edition"

// DATE "11/06/2024 11:56:40"

// 
// Device: Altera EP4CGX15BF14C6 Package FBGA169
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module demux14 (
	s,
	in,
	sel0,
	sel1);
output 	[3:0] s;
input 	in;
input 	sel0;
input 	sel1;

// Design Ports Information
// s[3]	=>  Location: PIN_M4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// s[2]	=>  Location: PIN_M6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// s[1]	=>  Location: PIN_N4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// s[0]	=>  Location: PIN_L7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// sel1	=>  Location: PIN_L4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// in	=>  Location: PIN_N6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// sel0	=>  Location: PIN_L11,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \s[3]~output_o ;
wire \s[2]~output_o ;
wire \s[1]~output_o ;
wire \s[0]~output_o ;
wire \sel0~input_o ;
wire \in~input_o ;
wire \sel1~input_o ;
wire \inst5~combout ;
wire \inst4~combout ;
wire \inst3~combout ;
wire \inst2~combout ;


// Location: IOOBUF_X8_Y0_N2
cycloneiv_io_obuf \s[3]~output (
	.i(\inst5~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \s[3]~output .bus_hold = "false";
defparam \s[3]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X12_Y0_N9
cycloneiv_io_obuf \s[2]~output (
	.i(\inst4~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \s[2]~output .bus_hold = "false";
defparam \s[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X10_Y0_N9
cycloneiv_io_obuf \s[1]~output (
	.i(\inst3~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \s[1]~output .bus_hold = "false";
defparam \s[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X14_Y0_N2
cycloneiv_io_obuf \s[0]~output (
	.i(\inst2~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \s[0]~output .bus_hold = "false";
defparam \s[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X31_Y0_N1
cycloneiv_io_ibuf \sel0~input (
	.i(sel0),
	.ibar(gnd),
	.o(\sel0~input_o ));
// synopsys translate_off
defparam \sel0~input .bus_hold = "false";
defparam \sel0~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X12_Y0_N1
cycloneiv_io_ibuf \in~input (
	.i(in),
	.ibar(gnd),
	.o(\in~input_o ));
// synopsys translate_off
defparam \in~input .bus_hold = "false";
defparam \in~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X8_Y0_N8
cycloneiv_io_ibuf \sel1~input (
	.i(sel1),
	.ibar(gnd),
	.o(\sel1~input_o ));
// synopsys translate_off
defparam \sel1~input .bus_hold = "false";
defparam \sel1~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X11_Y1_N8
cycloneiv_lcell_comb inst5(
// Equation(s):
// \inst5~combout  = (\sel0~input_o  & (\in~input_o  & \sel1~input_o ))

	.dataa(\sel0~input_o ),
	.datab(\in~input_o ),
	.datac(\sel1~input_o ),
	.datad(gnd),
	.cin(gnd),
	.combout(\inst5~combout ),
	.cout());
// synopsys translate_off
defparam inst5.lut_mask = 16'h8080;
defparam inst5.sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X11_Y1_N2
cycloneiv_lcell_comb inst4(
// Equation(s):
// \inst4~combout  = (!\sel0~input_o  & (\in~input_o  & \sel1~input_o ))

	.dataa(\sel0~input_o ),
	.datab(\in~input_o ),
	.datac(\sel1~input_o ),
	.datad(gnd),
	.cin(gnd),
	.combout(\inst4~combout ),
	.cout());
// synopsys translate_off
defparam inst4.lut_mask = 16'h4040;
defparam inst4.sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X11_Y1_N4
cycloneiv_lcell_comb inst3(
// Equation(s):
// \inst3~combout  = (\sel0~input_o  & (\in~input_o  & !\sel1~input_o ))

	.dataa(\sel0~input_o ),
	.datab(\in~input_o ),
	.datac(\sel1~input_o ),
	.datad(gnd),
	.cin(gnd),
	.combout(\inst3~combout ),
	.cout());
// synopsys translate_off
defparam inst3.lut_mask = 16'h0808;
defparam inst3.sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X11_Y1_N22
cycloneiv_lcell_comb inst2(
// Equation(s):
// \inst2~combout  = (!\sel0~input_o  & (\in~input_o  & !\sel1~input_o ))

	.dataa(\sel0~input_o ),
	.datab(\in~input_o ),
	.datac(\sel1~input_o ),
	.datad(gnd),
	.cin(gnd),
	.combout(\inst2~combout ),
	.cout());
// synopsys translate_off
defparam inst2.lut_mask = 16'h0404;
defparam inst2.sum_lutc_input = "datac";
// synopsys translate_on

assign s[3] = \s[3]~output_o ;

assign s[2] = \s[2]~output_o ;

assign s[1] = \s[1]~output_o ;

assign s[0] = \s[0]~output_o ;

endmodule
