// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.1.0 Build 162 10/23/2013 SJ Web Edition"

// DATE "11/24/2024 21:57:43"

// 
// Device: Altera EP4CGX15BF14C6 Package FBGA169
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module ex3_7 (
	A,
	S);
input 	[3:0] A;
output 	[3:0] S;

// Design Ports Information
// S[0]	=>  Location: PIN_A6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// S[1]	=>  Location: PIN_M4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// S[2]	=>  Location: PIN_L4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// S[3]	=>  Location: PIN_C6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// A[0]	=>  Location: PIN_N6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// A[1]	=>  Location: PIN_N4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// A[3]	=>  Location: PIN_L7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// A[2]	=>  Location: PIN_M6,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("ex3_7_6_1200mv_85c_v_slow.sdo");
// synopsys translate_on

wire \S[0]~output_o ;
wire \S[1]~output_o ;
wire \S[2]~output_o ;
wire \S[3]~output_o ;
wire \A[0]~input_o ;
wire \A[1]~input_o ;
wire \A[3]~input_o ;
wire \S~0_combout ;
wire \A[2]~input_o ;
wire \S~1_combout ;
wire \S~2_combout ;


// Location: IOOBUF_X10_Y31_N2
cycloneiv_io_obuf \S[0]~output (
	.i(\A[0]~input_o ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[0]~output .bus_hold = "false";
defparam \S[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X8_Y0_N2
cycloneiv_io_obuf \S[1]~output (
	.i(\S~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[1]~output .bus_hold = "false";
defparam \S[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X8_Y0_N9
cycloneiv_io_obuf \S[2]~output (
	.i(\S~1_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[2]~output .bus_hold = "false";
defparam \S[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X14_Y31_N2
cycloneiv_io_obuf \S[3]~output (
	.i(\S~2_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[3]~output .bus_hold = "false";
defparam \S[3]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X12_Y0_N1
cycloneiv_io_ibuf \A[0]~input (
	.i(A[0]),
	.ibar(gnd),
	.o(\A[0]~input_o ));
// synopsys translate_off
defparam \A[0]~input .bus_hold = "false";
defparam \A[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X10_Y0_N8
cycloneiv_io_ibuf \A[1]~input (
	.i(A[1]),
	.ibar(gnd),
	.o(\A[1]~input_o ));
// synopsys translate_off
defparam \A[1]~input .bus_hold = "false";
defparam \A[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X14_Y0_N1
cycloneiv_io_ibuf \A[3]~input (
	.i(A[3]),
	.ibar(gnd),
	.o(\A[3]~input_o ));
// synopsys translate_off
defparam \A[3]~input .bus_hold = "false";
defparam \A[3]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X8_Y1_N24
cycloneiv_lcell_comb \S~0 (
// Equation(s):
// \S~0_combout  = \A[1]~input_o  $ (((\A[0]~input_o  & !\A[3]~input_o )))

	.dataa(gnd),
	.datab(\A[1]~input_o ),
	.datac(\A[0]~input_o ),
	.datad(\A[3]~input_o ),
	.cin(gnd),
	.combout(\S~0_combout ),
	.cout());
// synopsys translate_off
defparam \S~0 .lut_mask = 16'hCC3C;
defparam \S~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X12_Y0_N8
cycloneiv_io_ibuf \A[2]~input (
	.i(A[2]),
	.ibar(gnd),
	.o(\A[2]~input_o ));
// synopsys translate_off
defparam \A[2]~input .bus_hold = "false";
defparam \A[2]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X8_Y1_N10
cycloneiv_lcell_comb \S~1 (
// Equation(s):
// \S~1_combout  = \A[2]~input_o  $ (((!\A[3]~input_o  & ((\A[1]~input_o ) # (\A[0]~input_o )))))

	.dataa(\A[2]~input_o ),
	.datab(\A[1]~input_o ),
	.datac(\A[0]~input_o ),
	.datad(\A[3]~input_o ),
	.cin(gnd),
	.combout(\S~1_combout ),
	.cout());
// synopsys translate_off
defparam \S~1 .lut_mask = 16'hAA56;
defparam \S~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X8_Y1_N28
cycloneiv_lcell_comb \S~2 (
// Equation(s):
// \S~2_combout  = (\A[2]~input_o ) # ((\A[1]~input_o ) # ((\A[0]~input_o ) # (\A[3]~input_o )))

	.dataa(\A[2]~input_o ),
	.datab(\A[1]~input_o ),
	.datac(\A[0]~input_o ),
	.datad(\A[3]~input_o ),
	.cin(gnd),
	.combout(\S~2_combout ),
	.cout());
// synopsys translate_off
defparam \S~2 .lut_mask = 16'hFFFE;
defparam \S~2 .sum_lutc_input = "datac";
// synopsys translate_on

assign S[0] = \S[0]~output_o ;

assign S[1] = \S[1]~output_o ;

assign S[2] = \S[2]~output_o ;

assign S[3] = \S[3]~output_o ;

endmodule
