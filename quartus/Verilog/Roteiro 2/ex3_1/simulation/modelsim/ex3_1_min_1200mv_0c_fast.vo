// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 32-bit"
// VERSION "Version 13.1.0 Build 162 10/23/2013 SJ Web Edition"

// DATE "11/19/2024 16:46:51"

// 
// Device: Altera EP4CGX15BF14C6 Package FBGA169
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module ex3_1 (
	a,
	b,
	c,
	result);
input 	[1:0] a;
input 	[1:0] b;
input 	[1:0] c;
output 	result;

// Design Ports Information
// result	=>  Location: PIN_M4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// a[1]	=>  Location: PIN_M6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// a[0]	=>  Location: PIN_N4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// c[0]	=>  Location: PIN_C6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// b[0]	=>  Location: PIN_L4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// c[1]	=>  Location: PIN_N10,	 I/O Standard: 2.5 V,	 Current Strength: Default
// b[1]	=>  Location: PIN_L5,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("ex3_1_min_1200mv_0c_v_fast.sdo");
// synopsys translate_on

wire \result~output_o ;
wire \b[1]~input_o ;
wire \b[0]~input_o ;
wire \a[0]~input_o ;
wire \c[0]~input_o ;
wire \c[1]~input_o ;
wire \LessThan0~1_combout ;
wire \a[1]~input_o ;
wire \LessThan0~0_combout ;
wire \LessThan0~2_combout ;


// Location: IOOBUF_X8_Y0_N2
cycloneiv_io_obuf \result~output (
	.i(\LessThan0~2_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\result~output_o ),
	.obar());
// synopsys translate_off
defparam \result~output .bus_hold = "false";
defparam \result~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X14_Y0_N8
cycloneiv_io_ibuf \b[1]~input (
	.i(b[1]),
	.ibar(gnd),
	.o(\b[1]~input_o ));
// synopsys translate_off
defparam \b[1]~input .bus_hold = "false";
defparam \b[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X8_Y0_N8
cycloneiv_io_ibuf \b[0]~input (
	.i(b[0]),
	.ibar(gnd),
	.o(\b[0]~input_o ));
// synopsys translate_off
defparam \b[0]~input .bus_hold = "false";
defparam \b[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X10_Y0_N8
cycloneiv_io_ibuf \a[0]~input (
	.i(a[0]),
	.ibar(gnd),
	.o(\a[0]~input_o ));
// synopsys translate_off
defparam \a[0]~input .bus_hold = "false";
defparam \a[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X14_Y31_N1
cycloneiv_io_ibuf \c[0]~input (
	.i(c[0]),
	.ibar(gnd),
	.o(\c[0]~input_o ));
// synopsys translate_off
defparam \c[0]~input .bus_hold = "false";
defparam \c[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X26_Y0_N8
cycloneiv_io_ibuf \c[1]~input (
	.i(c[1]),
	.ibar(gnd),
	.o(\c[1]~input_o ));
// synopsys translate_off
defparam \c[1]~input .bus_hold = "false";
defparam \c[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X11_Y1_N2
cycloneiv_lcell_comb \LessThan0~1 (
// Equation(s):
// \LessThan0~1_combout  = (\a[0]~input_o  & (((!\c[0]~input_o  & !\c[1]~input_o )) # (!\b[0]~input_o )))

	.dataa(\b[0]~input_o ),
	.datab(\a[0]~input_o ),
	.datac(\c[0]~input_o ),
	.datad(\c[1]~input_o ),
	.cin(gnd),
	.combout(\LessThan0~1_combout ),
	.cout());
// synopsys translate_off
defparam \LessThan0~1 .lut_mask = 16'h444C;
defparam \LessThan0~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X12_Y0_N8
cycloneiv_io_ibuf \a[1]~input (
	.i(a[1]),
	.ibar(gnd),
	.o(\a[1]~input_o ));
// synopsys translate_off
defparam \a[1]~input .bus_hold = "false";
defparam \a[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X11_Y1_N0
cycloneiv_lcell_comb \LessThan0~0 (
// Equation(s):
// \LessThan0~0_combout  = (\b[0]~input_o  & (\a[0]~input_o  & ((!\c[1]~input_o ) # (!\c[0]~input_o )))) # (!\b[0]~input_o  & ((\a[0]~input_o ) # ((!\c[1]~input_o ))))

	.dataa(\b[0]~input_o ),
	.datab(\a[0]~input_o ),
	.datac(\c[0]~input_o ),
	.datad(\c[1]~input_o ),
	.cin(gnd),
	.combout(\LessThan0~0_combout ),
	.cout());
// synopsys translate_off
defparam \LessThan0~0 .lut_mask = 16'h4CDD;
defparam \LessThan0~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X11_Y1_N4
cycloneiv_lcell_comb \LessThan0~2 (
// Equation(s):
// \LessThan0~2_combout  = (\b[1]~input_o  & (((\a[1]~input_o  & \LessThan0~0_combout )))) # (!\b[1]~input_o  & ((\LessThan0~1_combout ) # ((\a[1]~input_o ))))

	.dataa(\b[1]~input_o ),
	.datab(\LessThan0~1_combout ),
	.datac(\a[1]~input_o ),
	.datad(\LessThan0~0_combout ),
	.cin(gnd),
	.combout(\LessThan0~2_combout ),
	.cout());
// synopsys translate_off
defparam \LessThan0~2 .lut_mask = 16'hF454;
defparam \LessThan0~2 .sum_lutc_input = "datac";
// synopsys translate_on

assign result = \result~output_o ;

endmodule
